"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(1)
num_rows <- 400 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(1)
num_rows <- 600 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(1)
num_rows <- 650 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(1)
num_rows <- 650 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(1)
num_rows <- 850 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(1)
num_rows <- 950 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(13)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(20)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(21)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(210)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(212)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(254)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(234)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(245)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
set.seed(13)
num_rows <- 1000 #1460 total
keep <- sample(1:nrow(dt), num_rows)
mytrain <- dt[keep, ]
mylm <- lm(sp ~  nbd + tsf1:oq + tsf1:oc1 + tsf1:nbd + bld1 + tsf1:kq + tsf1:bth + bdr + tsf1:bdr + sc + tsf1:ht + al + gr + tsf1:fp + LotArea , data=mytrain)
mytest <- dt[-keep, ] #Use this in the predict(..., newdata=mytest)
yhcc <- predict(mylm, newdata=mytest)
ybarcc <- mean(mytest$sp)
SSTOcc <- sum( (mytest$sp - ybarcc)^2 )
SSEcc <- sum( (mytest$sp - yhcc)^2 )
rscc <- 1 - SSEcc/SSTOcc
n <- length(mytest$sp) #sample size
pcc  <- length(coef(mylm)) #num. parameters in model
rscca <- 1 - (n-1)/(n-pcc)*SSEcc/SSTOcc
my_output_table2 <- data.frame(
Model = c(
"Square Footage Model"),
`Original R2` = c(
summary(mylm)$r.squared),
#summary(bsalm)$r.squared),
`Orig. Adj. R-squared` = c(
summary(mylm)$adj.r.squared),
#summary(bsalm)$adj.r.squared,
`Validation R-squared` = c(
rscc),
`Validation Adj. R^2` = c(
rscca))
colnames(my_output_table2) <- c(
"Model", "Original $R^2$",
"Original Adj. $R^2$",
"Validation $R^2$",
"Validation Adj. $R^2$")
kable(my_output_table2, escape=TRUE, digits=5)
